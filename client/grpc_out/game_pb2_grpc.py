# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from client.grpc_out import game_pb2 as client_dot_grpc__out_dot_game__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in client/grpc_out/game_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class GameStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Connect = channel.unary_unary(
                '/grpc.Game/Connect',
                request_serializer=client_dot_grpc__out_dot_game__pb2.PlayerInformation.SerializeToString,
                response_deserializer=client_dot_grpc__out_dot_game__pb2.Position.FromString,
                _registered_method=True)
        self.GetMap = channel.unary_unary(
                '/grpc.Game/GetMap',
                request_serializer=client_dot_grpc__out_dot_game__pb2.Nothing.SerializeToString,
                response_deserializer=client_dot_grpc__out_dot_game__pb2.Map.FromString,
                _registered_method=True)
        self.GetPlayersMovements = channel.unary_stream(
                '/grpc.Game/GetPlayersMovements',
                request_serializer=client_dot_grpc__out_dot_game__pb2.Id.SerializeToString,
                response_deserializer=client_dot_grpc__out_dot_game__pb2.PlayerMovement.FromString,
                _registered_method=True)
        self.GetPlayersTurns = channel.unary_stream(
                '/grpc.Game/GetPlayersTurns',
                request_serializer=client_dot_grpc__out_dot_game__pb2.Id.SerializeToString,
                response_deserializer=client_dot_grpc__out_dot_game__pb2.PlayerTurn.FromString,
                _registered_method=True)
        self.GetAllBullets = channel.unary_stream(
                '/grpc.Game/GetAllBullets',
                request_serializer=client_dot_grpc__out_dot_game__pb2.Nothing.SerializeToString,
                response_deserializer=client_dot_grpc__out_dot_game__pb2.Bullets.FromString,
                _registered_method=True)
        self.GetAllPlayers = channel.unary_stream(
                '/grpc.Game/GetAllPlayers',
                request_serializer=client_dot_grpc__out_dot_game__pb2.Nothing.SerializeToString,
                response_deserializer=client_dot_grpc__out_dot_game__pb2.OtherPlayerInformation.FromString,
                _registered_method=True)
        self.GetPlayersHealthsChanging = channel.unary_stream(
                '/grpc.Game/GetPlayersHealthsChanging',
                request_serializer=client_dot_grpc__out_dot_game__pb2.Id.SerializeToString,
                response_deserializer=client_dot_grpc__out_dot_game__pb2.HealthsChanging.FromString,
                _registered_method=True)
        self.GetPlayerName = channel.unary_unary(
                '/grpc.Game/GetPlayerName',
                request_serializer=client_dot_grpc__out_dot_game__pb2.Id.SerializeToString,
                response_deserializer=client_dot_grpc__out_dot_game__pb2.Name.FromString,
                _registered_method=True)
        self.GetKills = channel.unary_stream(
                '/grpc.Game/GetKills',
                request_serializer=client_dot_grpc__out_dot_game__pb2.Id.SerializeToString,
                response_deserializer=client_dot_grpc__out_dot_game__pb2.KillInformation.FromString,
                _registered_method=True)
        self.Move = channel.unary_unary(
                '/grpc.Game/Move',
                request_serializer=client_dot_grpc__out_dot_game__pb2.Id.SerializeToString,
                response_deserializer=client_dot_grpc__out_dot_game__pb2.Nothing.FromString,
                _registered_method=True)
        self.Turn = channel.unary_unary(
                '/grpc.Game/Turn',
                request_serializer=client_dot_grpc__out_dot_game__pb2.TurnMessage.SerializeToString,
                response_deserializer=client_dot_grpc__out_dot_game__pb2.Nothing.FromString,
                _registered_method=True)
        self.Fire = channel.unary_unary(
                '/grpc.Game/Fire',
                request_serializer=client_dot_grpc__out_dot_game__pb2.Id.SerializeToString,
                response_deserializer=client_dot_grpc__out_dot_game__pb2.Nothing.FromString,
                _registered_method=True)


class GameServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Connect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlayersMovements(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlayersTurns(self, request, context):
        """Не обязательныя для подключения функция, её можно использовать чтобы видеть в какую сторону направлен танк противника
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllBullets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllPlayers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlayersHealthsChanging(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlayerName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetKills(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Move(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Turn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Fire(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GameServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Connect': grpc.unary_unary_rpc_method_handler(
                    servicer.Connect,
                    request_deserializer=client_dot_grpc__out_dot_game__pb2.PlayerInformation.FromString,
                    response_serializer=client_dot_grpc__out_dot_game__pb2.Position.SerializeToString,
            ),
            'GetMap': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMap,
                    request_deserializer=client_dot_grpc__out_dot_game__pb2.Nothing.FromString,
                    response_serializer=client_dot_grpc__out_dot_game__pb2.Map.SerializeToString,
            ),
            'GetPlayersMovements': grpc.unary_stream_rpc_method_handler(
                    servicer.GetPlayersMovements,
                    request_deserializer=client_dot_grpc__out_dot_game__pb2.Id.FromString,
                    response_serializer=client_dot_grpc__out_dot_game__pb2.PlayerMovement.SerializeToString,
            ),
            'GetPlayersTurns': grpc.unary_stream_rpc_method_handler(
                    servicer.GetPlayersTurns,
                    request_deserializer=client_dot_grpc__out_dot_game__pb2.Id.FromString,
                    response_serializer=client_dot_grpc__out_dot_game__pb2.PlayerTurn.SerializeToString,
            ),
            'GetAllBullets': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAllBullets,
                    request_deserializer=client_dot_grpc__out_dot_game__pb2.Nothing.FromString,
                    response_serializer=client_dot_grpc__out_dot_game__pb2.Bullets.SerializeToString,
            ),
            'GetAllPlayers': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAllPlayers,
                    request_deserializer=client_dot_grpc__out_dot_game__pb2.Nothing.FromString,
                    response_serializer=client_dot_grpc__out_dot_game__pb2.OtherPlayerInformation.SerializeToString,
            ),
            'GetPlayersHealthsChanging': grpc.unary_stream_rpc_method_handler(
                    servicer.GetPlayersHealthsChanging,
                    request_deserializer=client_dot_grpc__out_dot_game__pb2.Id.FromString,
                    response_serializer=client_dot_grpc__out_dot_game__pb2.HealthsChanging.SerializeToString,
            ),
            'GetPlayerName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlayerName,
                    request_deserializer=client_dot_grpc__out_dot_game__pb2.Id.FromString,
                    response_serializer=client_dot_grpc__out_dot_game__pb2.Name.SerializeToString,
            ),
            'GetKills': grpc.unary_stream_rpc_method_handler(
                    servicer.GetKills,
                    request_deserializer=client_dot_grpc__out_dot_game__pb2.Id.FromString,
                    response_serializer=client_dot_grpc__out_dot_game__pb2.KillInformation.SerializeToString,
            ),
            'Move': grpc.unary_unary_rpc_method_handler(
                    servicer.Move,
                    request_deserializer=client_dot_grpc__out_dot_game__pb2.Id.FromString,
                    response_serializer=client_dot_grpc__out_dot_game__pb2.Nothing.SerializeToString,
            ),
            'Turn': grpc.unary_unary_rpc_method_handler(
                    servicer.Turn,
                    request_deserializer=client_dot_grpc__out_dot_game__pb2.TurnMessage.FromString,
                    response_serializer=client_dot_grpc__out_dot_game__pb2.Nothing.SerializeToString,
            ),
            'Fire': grpc.unary_unary_rpc_method_handler(
                    servicer.Fire,
                    request_deserializer=client_dot_grpc__out_dot_game__pb2.Id.FromString,
                    response_serializer=client_dot_grpc__out_dot_game__pb2.Nothing.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc.Game', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('grpc.Game', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Game(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Connect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.Game/Connect',
            client_dot_grpc__out_dot_game__pb2.PlayerInformation.SerializeToString,
            client_dot_grpc__out_dot_game__pb2.Position.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.Game/GetMap',
            client_dot_grpc__out_dot_game__pb2.Nothing.SerializeToString,
            client_dot_grpc__out_dot_game__pb2.Map.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlayersMovements(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/grpc.Game/GetPlayersMovements',
            client_dot_grpc__out_dot_game__pb2.Id.SerializeToString,
            client_dot_grpc__out_dot_game__pb2.PlayerMovement.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlayersTurns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/grpc.Game/GetPlayersTurns',
            client_dot_grpc__out_dot_game__pb2.Id.SerializeToString,
            client_dot_grpc__out_dot_game__pb2.PlayerTurn.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllBullets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/grpc.Game/GetAllBullets',
            client_dot_grpc__out_dot_game__pb2.Nothing.SerializeToString,
            client_dot_grpc__out_dot_game__pb2.Bullets.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllPlayers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/grpc.Game/GetAllPlayers',
            client_dot_grpc__out_dot_game__pb2.Nothing.SerializeToString,
            client_dot_grpc__out_dot_game__pb2.OtherPlayerInformation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlayersHealthsChanging(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/grpc.Game/GetPlayersHealthsChanging',
            client_dot_grpc__out_dot_game__pb2.Id.SerializeToString,
            client_dot_grpc__out_dot_game__pb2.HealthsChanging.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlayerName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.Game/GetPlayerName',
            client_dot_grpc__out_dot_game__pb2.Id.SerializeToString,
            client_dot_grpc__out_dot_game__pb2.Name.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetKills(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/grpc.Game/GetKills',
            client_dot_grpc__out_dot_game__pb2.Id.SerializeToString,
            client_dot_grpc__out_dot_game__pb2.KillInformation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Move(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.Game/Move',
            client_dot_grpc__out_dot_game__pb2.Id.SerializeToString,
            client_dot_grpc__out_dot_game__pb2.Nothing.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Turn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.Game/Turn',
            client_dot_grpc__out_dot_game__pb2.TurnMessage.SerializeToString,
            client_dot_grpc__out_dot_game__pb2.Nothing.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Fire(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.Game/Fire',
            client_dot_grpc__out_dot_game__pb2.Id.SerializeToString,
            client_dot_grpc__out_dot_game__pb2.Nothing.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
